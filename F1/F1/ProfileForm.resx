<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        LbXU0rqgLPt/YXtUcSXqqS0AAAAASUVORK5CYII=
</value>
  </data>
</root>